@model AgileDevelopmentPlatform.ViewModel.EditTaskViewModel

@using (Html.BeginForm("UpdateTask", "Projects"))
{
    @Html.AntiForgeryToken()
    
    <div class="modal-content">
        <div class="modal-header">
            <a href="#" class="close" data-dismiss="modal">&times;</a>
            <h3>Edit task</h3>
        </div>
        <div class="modal-body">
            <div class="form-group">
                @Html.ValidationSummary("", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description)
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaskInitiatorId)
                @Html.DropDownListFor(model => model.TaskInitiatorId, new SelectList(Model.UserList, "Id", "UserName"), new {@disabled = "true", @class = "form-control"})
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Priority)
                @Html.DropDownListFor(m => m.Priority, new SelectList(Model.PriorityType, "Priority"), "", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Priority, "", new {@class = "text-danger"})
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ResponsibleUserId)
                @Html.DropDownListFor(model => model.ResponsibleUserId, new SelectList(Model.UserList, "Id", "UserName"), "", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ResponsibleUserId, "", new {@class = "text-danger"})

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status)
                @Html.DropDownListFor(model => model.Status, new SelectList(Model.TaskStateList, "Status"), "", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Status, "", new {@class = "text-danger"})
            </div>

            @Html.HiddenFor(m => m.TaskInitiatorId)
            @Html.HiddenFor(m => m.Id)

        </div>
                <div class="modal-footer">
                    <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button id="#btnSubmit" class="btn btn-success">Submit</button>
                </div>
            </div>

}

