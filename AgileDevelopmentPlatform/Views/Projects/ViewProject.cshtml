@using AgileDevelopmentPlatform.ViewModel
@using Microsoft.AspNet.Identity
@model ProjectViewModel

@{
    ViewBag.Title = "ViewProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
}
<div>
    <div>
            <H2>Project @Model.Name</H2>

            @if (@Model.OwnerId.Equals(@User.Identity.GetUserId()))
            {

                @Html.ActionLink("Edit user access on project", "EditProjectAccess", "Projects", new {id = Model.Id}, null)

            }
        <button class="button btn-success hover" onclick="CreateNewSprint()">Create sprint</button>
            @Html.ActionLink("Reports","Reports","Projects", new {projectId= Model.Id},null)
        
    </div>

    <div id="sprintSection" class="form-group">
        @if (!Model.SprintList.Any())
        {
            <p>No sprints have been created yet.</p>
        }
        else
        {
            foreach (SprintViewModel sprintModel in Model.SprintList)
            {

                <h2>@sprintModel.Name</h2>

                if (!sprintModel.Tasks.Any())
                {
                    <p>No task has been assigned  to this sprint yet.</p>
                }
                else
                {
                    <div class="row">
                        <div class=" col-md-2"></div>
                        <div class=" col-md-2"><h5>Open tasks: @sprintModel.OpenTasks</h5></div>
                        <div class=" col-md-2"><h5>Working tasks: @sprintModel.WorkingTasks</h5></div>
                        <div class=" col-md-2"><h5>Finished tasks: @sprintModel.FinishedTasks</h5></div>
                        <div class=" col-md-4"><h5>Percentage of completion: @sprintModel.PercentageOfCompletion %</h5></div>

                    </div>

                    <div>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th class="col-md-9">Name</th>
                                    <th class="col-md-3">Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (ReferenceTaskViewModel task in sprintModel.Tasks)
                                {
                                    <tr>
                                        <td>@task.Name</td>
                                        <td>
                                            @if (!@task.IsCompleted)
                                            {
                                                <button class="btn-success" onclick="EditTask(@task.Id)">Update</button>
                                            }
                                            else
                                            {
                                                <button class="btn-success" onclick="ReopenTask(@task.Id)">Reopen task</button>
                                            }

                                            <button class="btn-danger " onclick="DeleteTask(@task.Id)">Delete</button>
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }

            }
        }
    </div>
    <div class="form-group" id="backlogSection">
        <div class="row">
            <div class="col-md-10">
                <h1>Backlog</h1>
            </div>
            <div class="col-md-2">
                <button class="button btn-success hover" style="vertical-align:baseline" onclick="CreateNewTask()">Add new task</button>
            </div>
        </div>
        @if (!Model.TaskList.Any())
        {
            <p>No tasks are available in backlog section.</p>
        }
        else
        {
            <table id="backlogTable" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th class="col-md-9">Name</th>
                        <th class="col-md-3">Edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (ReferenceTaskViewModel task in Model.TaskList)
                    {
                        <tr>
                            <td>@task.Name</td>
                            <td>
                                @if (Model.SprintList.Any())
                                {
                                    <button class="btn-success" onclick="AssingTaskToSprint(@task.Id)">Assign</button>
                                }
                                @if (!@task.IsCompleted)
                                {
                                    <button class="btn-success" onclick="EditTask(@task.Id)">Update</button>
                                }
                                else
                                {
                                    <button class="btn-success" onclick="ReopenTask(@task.Id)">Reopen task</button>
                                }
                               
                                <button class="btn-danger " onclick="DeleteTask(@task.Id)">Remove</button>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        }

        <div class="modal fade" id="taskCreationModal">
            <div class="modal-dialog">
                <div class="modal-content" id="newTaskCreationBody">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3>New task</h3>
                    </div>
                    <div class="modal-body">

                    </div>

                </div>
            </div>
        </div>
    </div>

</div>


<script>
    function CreateNewTask() {
        
        $("#newTaskCreationBody").load('@Url.Action("NewTask", "Projects", new {projectId = @Model.Id})',
            function() {
                $("#taskCreationModal").modal("show");
            });


    };

    function EditTask(taskId) {
        $("#newTaskCreationBody").load('@Url.Action("EditTask", "Projects")?taskID=' + taskId,
            function() {
                $("#taskCreationModal").modal("show");
            });
    }
    function ReopenTask(taskId) {
        bootbox.confirm("Are you sure you want to reopen the selected task?",
            function(result) {
                if (result) {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ReopenTask", "Projects")',                    
                        data: { id: taskId },                     
                        success: function() {window.location.reload(true);},
                        error: function() { alert('A error'); }
                    });

                }
            });
    }

    function DeleteTask(taskId) {
        var table = $("#backlogTable").DataTable();
        var button = $(this);
        bootbox.confirm("Are you sure you want to delete the selected task?",
            function(result) {
                if (result) {
                    $.ajax({
                        url: "/api/tasks/" + taskId,
                        method: "DELETE",
                        success: function() {
                            table.row(button.parents("tr").remove()).draw();
                            window.location.reload(true);

                        }

                    });
                }
            });
    }

    function AssingTaskToSprint(taskId) {
        $("#newTaskCreationBody").load('@Url.Action("AssignTaskToSprint", "Projects")?taskID=' + taskId,
            function() {
                $("#taskCreationModal").modal("show");
            });
    }


    function CreateNewSprint() {
        $("#newTaskCreationBody").load('@Url.Action("NewSprint", "Projects", new {projectId = @Model.Id})',
            function() {
                $("#taskCreationModal").modal("show");
            });
    };

    function ProjectReport(projectId) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("Reports", "Projects")',                    
            data: { projectId: projectId },                     
            error: function() { alert('A error'); }
        });
    }


</script>

