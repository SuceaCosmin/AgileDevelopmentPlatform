@using AgileDevelopmentPlatform.ViewModel
@using Microsoft.AspNet.Identity
@model ProjectViewModel

@{
    ViewBag.Title = "ViewProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div>
    <div>
        <H2>@Model.Name</H2>

        @if (@Model.OwnerId.Equals(@User.Identity.GetUserId()))
        {

            @Html.ActionLink("Edit user acces", "EditProjectAccess", "Projects", new { id = Model.Id, @class = "btn" }, null)


        }
        
        @Html.ActionLink("Reports", "Reports", "Projects", new { projectId = Model.Id }, null)

    </div>

    <div id="sprintSection" class="form-group">
        <div class="row" >
            <div class="col-md-10">
                <H1>Sprints</H1>
            </div>
            <div class="col-md-2">
                <button class="btn  btn-success hover" onclick="CreateNewSprint()">Add new sprint</button>
            </div>
        </div>
       
       
        @if (!Model.SprintList.Any())
    {
        <p>No sprints have been created yet.</p>
}
else
{
    <div id="colapsableSection" class="panel-group">


        @foreach (SprintViewModel sprintModel in Model.SprintList)
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <H4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#colapsableSection" href=@String.Format("#collapse_{0}", sprintModel.Name)>

                        @if (sprintModel.Tasks.Count > 0)
                    {
                        <div class="row">
                            <div class=" col-md-2"><H5>@sprintModel.Name</H5></div>
                            <div class=" col-md-2"><h5>Open tasks: @sprintModel.OpenTasks</h5></div>
                            <div class=" col-md-2"><h5>Working tasks: @sprintModel.WorkingTasks</h5></div>
                            <div class=" col-md-2"><h5>Finished tasks: @sprintModel.FinishedTasks</h5></div>
                            <div class=" col-md-4"><h5>Percentage of completion: @sprintModel.PercentageOfCompletion %</h5></div>
                            

                        </div>
                }
                else
                {
                    @sprintModel.Name
            }
                    </a>
                </H4>
            </div>
            <div id=@String.Format("collapse_{0}", sprintModel.Name) class="panel-collapse collapse @(Model.SprintList.ToList().IndexOf(sprintModel) == 0 ? "in" : "")">
                <div class="panel-body">
                    <div class="row">
                        <div class=" col-md-10">
                        </div>
                        <div class="col-md-2">
                            <button class="btn btn-success glyphicon glyphicon-pencil" onclick="EditSprint(@sprintModel.Id)"></button>
                            <button class="btn btn-danger glyphicon glyphicon-trash" onclick="DeleteSprint(@sprintModel.Id)"></button>
                        </div>
                    </div>
                    <br/>
                        @if (!sprintModel.Tasks.Any())
                        {
                            <p>No task has been assigned to this sprint yet.</p>
                        }
                        else
                        {


                            <div>
                                <table name="table_@sprintModel.Name" class="table table-bordered">
                                    <colgroup>
                                        <col class="col-md-10"/>
                                        <col class="col-md-2">
                                    </colgroup>
                                    <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Edit</th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (ReferenceTaskViewModel task in sprintModel.Tasks)
                                    {
                                        <tr>
                                            <td>@task.Name</td>
                                            <td>
                                                @if (!@task.IsCompleted)
                                                {
                                                    <button class="btn btn-success" onclick="EditTask(@task.Id)"><span class="glyphicon glyphicon-pencil"></span></button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-success" onclick="ReopenTask(@task.Id)"><span class=" glyphicon glyphicon-retweet"></span></button>
                                                }

                                                <button class="btn btn-danger " onclick="DeleteTask(@task.Id)"><span class="glyphicon glyphicon-trash"></span></button>
                                            </td>

                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
            </div>
        </div>
}
    </div>
}
    </div>
    <div class="form-group" id="backlogSection">
        <div class="row">
            <div class="col-md-10">
                <h1>Backlog</h1>
            </div>
            <div class="col-md-2">
                <button class="btn btn-success hover" style="vertical-align:baseline" onclick="CreateNewTask()">Add new task</button>
            </div>
        </div>
        @if (!Model.TaskList.Any())
        {
            <p>No tasks are available in backlog section.</p>
        }
        else
        {
            <table id="backlogTable" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th class="col-md-9">Name</th>
                        <th class="col-md-3">Edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (ReferenceTaskViewModel task in Model.TaskList)
                    {
                        <tr>
                            <td>@task.Name</td>
                            <td>
                                @if (Model.SprintList.Any())
                                {
                                    <button class="btn btn-success" onclick="AssingTaskToSprint(@task.Id)"><span class="glyphicon glyphicon-share-alt"></span></button>
                                }
                                @if (!@task.IsCompleted)
                                {
                                    <button class="btn btn-success" onclick="EditTask(@task.Id)"><span class="glyphicon glyphicon-pencil"></span></button>
                                }
                                else
                                {
                                    <button class="btn btn-success" onclick="ReopenTask(@task.Id)"><span class="glyphicon glyphicon-retweet"></span></button>
                                }

                                <button class="btn btn-danger " onclick="DeleteTask(@task.Id)"><span class="glyphicon glyphicon-trash"></span></button>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        }

        <div class="modal fade" id="taskCreationModal">
            <div class="modal-dialog">
                <div class="modal-content" id="newTaskCreationBody">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3>New task</h3>
                    </div>
                    <div class="modal-body">

                    </div>

                </div>
            </div>
        </div>
    </div>

</div>

@section scripts{
    <script>

        $(document).ready(function() {
            var table = $("#backlogTable").DataTable();
                var tables = document.querySelector('[name^=table_]');

                for (var i = 0; i < tables.length; i++) {
                    tables[i].DataTable();
                }
        });


        function CreateNewTask() {

            $("#newTaskCreationBody").load('@Url.Action("NewTask", "Projects", new {projectId = @Model.Id})',
                function() {
                    $("#taskCreationModal").modal("show");
                });


        };

        function EditTask(taskId) {
            $("#newTaskCreationBody").load('@Url.Action("EditTask", "Projects")?taskID=' + taskId,
                function() {
                    $("#taskCreationModal").modal("show");
                });
        }

        function ReopenTask(taskId) {
            bootbox.confirm("Are you sure you want to reopen the selected task?",
                function(result) {
                    if (result) {

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("ReopenTask", "Projects")',
                            data: { id: taskId },
                            success: function() { window.location.reload(true); },
                            error: function() { alert('A error'); }
                        });

                    }
                });
        }

        function DeleteTask(taskId) {
            var table = $("#backlogTable").DataTable();
            var button = $(this);
            bootbox.confirm("Are you sure you want to delete the selected task?",
                function(result) {
                    if (result) {
                        $.ajax({
                            url: "/api/tasks/" + taskId,
                            method: "DELETE",
                            success: function() {
                                table.row(button.parents("tr").remove()).draw();
                                window.location.reload(true);

                            }

                        });
                    }
                });
        }

        function AssingTaskToSprint(taskId) {
            $("#newTaskCreationBody").load('@Url.Action("AssignTaskToSprint", "Projects")?taskID=' + taskId,
                function() {
                    $("#taskCreationModal").modal("show");
                });
        }

        function CreateNewSprint() {
            $("#newTaskCreationBody").load('@Url.Action("NewSprint", "Projects", new {projectId = @Model.Id})',
                function() {
                    $("#taskCreationModal").modal("show");
                });
        };

        function EditSprint(id) {


            $("#newTaskCreationBody").load('@Url.Action("EditSprint", "Projects")?sprintId=' + id,
                function() {
                    $("#taskCreationModal").modal("show");
                });


        }

        function DeleteSprint(sprintId) {
            bootbox.confirm("Are you sure you want to delete the selected sprint?",
                function(result) {
                    if (result) {

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("DeleteSprint", "Projects")',
                            data: { sprintId: sprintId },
                            success: function() { window.location.reload(true); },
                            error: function() { alert('A error'); }
                        });

                    }
                });
        }


        function ProjectReport(projectId) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Reports", "Projects")',
                data: { projectId: projectId },
                error: function() { alert('A error'); }
            });
        }


    </script>
}

