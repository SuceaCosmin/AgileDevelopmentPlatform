@using AgileDevelopmentPlatform.ViewModel
@using Microsoft.AspNet.Identity
@model ProjectViewModel

@{
    ViewBag.Title = "ViewProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
}
<div>
    <div>
        <H2>Project @Model.Name</H2>
        @if (@Model.OwnerId.Equals(@User.Identity.GetUserId()))
        {

            @Html.ActionLink("Edit user access on project", "EditProjectAccess", "Projects", new { id = Model.Id }, null)
           
        }
        <button class="button btn-success hover" onclick="CreateNewSprint(@Model.Id)">Create sprint</button>
    </div>

    <div id="sprintSection" class="form-group">
        @if (!Model.SprintList.Any())
        {
            <p>No sprints have been created yet.</p>
        }
        else
        {
            foreach (SprintViewModel sprintModel in Model.SprintList)
            {

                <h2>@sprintModel.Name</h2>

                if (!sprintModel.Tasks.Any())
                {
                    <p>No task has been assigned  to this sprint yet.</p>
                }
                else
                {
                    <div class="row">
                        <div class=" col-md-4"></div>
                        <div class=" col-md-2"><h4>Open tasks @sprintModel.OpenTasks</h4></div>
                        <div class=" col-md-2"><h4>Working tasks @sprintModel.WorkingTasks</h4></div>
                        <div class=" col-md-2"><h4>Finished tasks @sprintModel.FinishedTasks</h4></div>
                        <div class=" col-md-2"></div>

                    </div>

                    <div>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th class="col-md-9">Name</th>
                                    <th class="col-md-3">Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (ReferenceTaskViewModel task in sprintModel.Tasks)
                                {
                                    <tr>
                                        <td>@task.Name</td>
                                        <td><button class="btn-success" onclick="EditTask(@task.Id)">Update</button><button class="btn-danger " onclick="DeleteTask(@task.Id)">Remove</button></td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }

            }
        }
    </div>
    <div class="form-group" id="backlogSection">
        <div class="row form-group">
            <div class="col-md-10">
                <H1>Backlog</H1>
            </div>
            <div class="col-md-2">
                <button class="button btn-success hover" onclick="CreateNewTask(@Model.Id)">Create task</button>
            </div>
        </div>
        @if (!Model.TaskList.Any())
        {
            <p>No tasks are available in backlog section.</p>
        }
        else
        {
            <table id="backlogTable" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th class="col-md-9">Name</th>
                        <th class="col-md-3">Edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (ReferenceTaskViewModel task in Model.TaskList)
                    {
                        <tr>
                            <td>@task.Name</td>
                            <td>
                                @if (Model.SprintList.Any())
                                {
                                    <button class="btn-success" onclick="AssingTaskToSprint(@task.Id)">Assign</button>
                                }
                                <button class="btn-success" onclick="EditTask(@task.Id)">Update</button>
                                <button class="btn-danger " onclick="DeleteTask(@task.Id)">Remove</button>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        }

        <div class="modal fade" id="taskCreationModal">
            <div class="modal-dialog">
                <div class="modal-content" id="newTaskCreationBody">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3>New task</h3>
                    </div>
                    <div class="modal-body">

                    </div>

                </div>
            </div>
        </div>
    </div>

</div>


<script>
    $(document).ready(function() {
        var table = $("#backlogTable").DataTable();

        $("#backlogTable").on("click",
            ".js-delete",
            function() {


            });
    });


    function CreateNewTask(id) {
        
        $("#newTaskCreationBody").load('@Url.Action("NewTask", "Projects", new {projectId = @Model.Id})',
                function() {
                    $("#taskCreationModal").modal("show");
                });


        };

    function EditTask(taskId) {
            $("#newTaskCreationBody").load('@Url.Action("EditTask", "Projects")?taskID=' + taskId,
            function() {
                $("#taskCreationModal").modal("show");
            });
    }

    function DeleteTask(taskId) {
        var table = $("#backlogTable").DataTable();
        var button = $(this);
        bootbox.confirm("Are you sure you want to delete the selected task?",
            function(result) {
                if (result) {
                    $.ajax({
                        url: "/api/tasks/" + taskId,
                        method: "DELETE",
                        success: function() {
                            table.row(button.parents("tr").remove()).draw();
                            window.location.reload(true);

                        }

                    });
                }
            });
    }

    function AssingTaskToSprint(taskId) {
        $("#newTaskCreationBody").load('@Url.Action("AssignTaskToSprint", "Projects")?taskID=' + taskId,
            function() {
                $("#taskCreationModal").modal("show");
            });
    }


    function CreateNewSprint(projectId) {


        $("#newTaskCreationBody").load('@Url.Action("NewSprint", "Projects", new {projectId = @Model.Id})',
            function() {
                $("#taskCreationModal").modal("show");
            });


    };
</script>

